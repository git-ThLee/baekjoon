def solution(name):
    answer = 0
    move = len(name) - 1
    for i in range(len(name)-1, -1, -1):
        if name[i] == 'A':
            move -= 1
        else:
            break
    for i, alpha in enumerate(name):
        answer += min(ord(alpha) - ord('A'), ord('Z') - ord(alpha) + 1)
        ni = i + 1
        while ni < len(name) and name[ni] == 'A':
            ni += 1
        move = min(move, 2*i + len(name) - ni)
        move = min(move, (len(name) - ni)*2 + i)
    answer += move
    if answer < 0:
        return 0
    return answer
# def solution(name):
# 	# 조이스틱 조작 횟수 
#     answer = 0    
#     moves = [min(ord(char) - ord('A'), ord('Z') - ord(char) + 1) for char in name]

#     # 상하 조정
#     for i in range(len(moves)):
#         if moves[i] == 0 : continue        
#         answer += moves[i]
        
#     # 좌우 조정
#     print(answer)
#     now = 0
#     for i in range(len(moves)-moves.count(0)):
#         left = 1
#         right = 1
#         for j in range(len(moves)):
#             if moves[(now - left)%len(moves) if abs(now-left) >= len(moves) else (now-left)] != 0 :
#                 break
#             else : 
#                 left += 1
#         for j in range(len(moves)):
#             if moves[(now + right)%len(moves) if now + right >= len(moves) else (now + right)] != 0 :
#                 break
#             else : 
#                 right += 1
#         moves[now] = 0
#         if sum(moves) == 0 : break
#         if left > right :
#             now += right       
#             answer += right 
#         else :
#             now -= left
#             answer += left
#     return answer