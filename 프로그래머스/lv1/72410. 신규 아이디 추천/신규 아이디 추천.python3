def solution(new_id):
    answer = ''
    special_characters = '~!@#$%^&*()=+[{]}:?,<>/'
    
    print('0단계 : ', new_id)
    print('1단계 new_id의 모든 대문자를 대응되는 소문자로 치환합니다.')
    new_id1 = new_id.lower()
    print('1단계 : ', new_id1)
    
    new_id2 = new_id1
    for i in range(len(new_id1)):
        for j in range(len(special_characters)):
            if new_id1[i] == special_characters[j]:
                new_id2 = new_id2.replace(new_id[i], "")            
    print('2단계 new_id에서 알파벳 소문자, 숫자, 빼기(-), 밑줄(_), 마침표(.)를 제외한 모든 문자를 제거합니다.')
    print('2단계 : ', new_id2)
    
    
    new_id3 = new_id2.replace('..','.')
    for i3 in range(1000):
        if new_id3.find('..') == -1 :
            break
        else:
            new_id3 = new_id3.replace('..','.')    
    print('3단계 new_id에서 마침표(.)가 2번 이상 연속된 부분을 하나의 마침표(.)로 치환합니다.')
    print('3단계 : ', new_id3)
    
    
    new_id4 = new_id3
    if new_id4[0] == '.':
        new_id4 = new_id4[1:]
    if new_id4 != '':
        if new_id4[-1] == '.':
            new_id4 = new_id4[:-1]
    print('4단계 new_id에서 마침표(.)가 처음이나 끝에 위치한다면 제거합니다.')
    print('4단계 : ', new_id4)
    
    new_id5 = new_id4
    if new_id5 == '':
        new_id5 = 'a'
    print('5단계 new_id가 빈 문자열이라면, new_id에 "a"를 대입합니다.')
    print('5단계 : ', new_id5)
    
    new_id6 = new_id5
    if len(new_id6) > 15:
        new_id6 = new_id6[:15]
    if new_id6[-1] == '.':
        new_id6 = new_id6[:-1]
    print('6단계 new_id의 길이가 16자 이상이면, new_id의 첫 15개의 문자를 제외한 나머지 문자들을 모두 제거합니다.')    
    print('만약 제거 후 마침표(.)가 new_id의 끝에 위치한다면 끝에 위치한 마침표(.) 문자를 제거합니다.')
    print('6단계 : ', new_id6)
    
    new_id7 = new_id6
    if len(new_id7) < 3:
        new_id7 = new_id7[0] + new_id7[-1] * 2
    print('7단계 new_id의 길이가 2자 이하라면, new_id의 마지막 문자를 new_id의 길이가 3이 될 때까지 반복해서 끝에 붙입다.')
    print('7단계 : ', new_id7)
    
    answer = new_id7
    return answer